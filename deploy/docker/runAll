#! /bin/bash

build=$1
if [[ "${1}" != "" ]]
then build=".${build}"
else build=""
fi

release="release"

# fail fast
set -euo pipefail

# load configuration
root_directory="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )/../.."
. ${root_directory}/deploy/config

# create file
cat <<EOF > ${docker_compose_file}
version: '2'
services:
    web:
        image: "${web_container}${build}"
        command: "/web/start.sh"
        ports:
            - "80:80"

    broker:
        image: "${broker_container}${build}"

    eventstore:
        image: "${populatedeventstore_container}${build}"
        ports:
            - "1113:1113"
            - "2113:2113"

    analytics:
        image: "${servers_container}${build}"
        command: "dotnet run --configuration Release -p Adaptive.ReactiveTrader.Server.Analytics config.prod.json && while true; do echo ping; sleep 60; done"
        depends_on:
            - broker
            - eventstore
    pricing:
        image: "${servers_container}${build}"
        command: "dotnet run --configuration Release -p Adaptive.ReactiveTrader.Server.Pricing config.prod.json && while true; do echo ping; sleep 60; done"
        depends_on:
            - broker
            - eventstore
            - analytics
    referencedataread:
        image: "${servers_container}${build}"
        command: "dotnet run --configuration Release -p Adaptive.ReactiveTrader.Server.ReferenceDataRead config.prod.json && while true; do echo ping; sleep 60; done"
        depends_on:
            - broker
            - eventstore
            - pricing
    tradeexecution:
        image: "${servers_container}${build}"
        command: "dotnet run --configuration Release -p Adaptive.ReactiveTrader.Server.TradeExecution config.prod.json && while true; do echo ping; sleep 60; done"
        depends_on:
            - broker
            - eventstore
            - referencedataread
    blotter:
        image: "${servers_container}${build}"
        command: "dotnet run --configuration Release -p Adaptive.ReactiveTrader.Server.Blotter config.prod.json && while true; do echo ping; sleep 60; done"
        depends_on:
            - broker
            - eventstore
            - tradeexecution
EOF

# start containers
docker-compose up
